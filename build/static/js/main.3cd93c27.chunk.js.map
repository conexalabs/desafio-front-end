{"version":3,"sources":["services/api.js","services/MaskedInput.js","services/validaCNPJ.js","assets/search.png","pages/Dashboard/index.js","pages/Empresa/index.js","routes/index.js","App.js","index.js"],"names":["api","axios","create","baseURL","MaskedInput","value","onChange","mask","event","string","target","replace","placeholder","validarCNPJ","cnpj","length","i","tamanho","numeros","substring","digitos","soma","pos","charAt","resultado","Dashboard","useState","newCnpj","setNewCnpj","storagedEmpresas","localStorage","getItem","JSON","parse","empresas","setEmpresas","a","preventDefault","get","response","empresa","data","alert","useEffect","setItem","stringify","className","class","onSubmit","type","src","searchImg","map","emp","href","nome","logradouro","numero","bairro","municipio","Empresa","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cd93c27.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://thingproxy.freeboard.io/fetch/https://www.receitaws.com.br/v1/cnpj',\r\n\r\n})\r\n\r\nexport default api","import React from 'react'\r\nimport InputMask from 'react-input-mask'\r\n\r\nconst onlyNumbers = (string) => string.replace(/[^0-9]/g, '')\r\n\r\nconst MaskedInput = ({ value, onChange }) => {\r\n\r\n    function HandleChange(event) {\r\n        onChange({\r\n            ...event,\r\n            target: {\r\n                ...event.target,\r\n                value: onlyNumbers(event.target.value)\r\n            }\r\n        })\r\n    }\r\n\r\n    return <InputMask mask=\"99.999.999/9999-99\" value={value} onChange={HandleChange} placeholder=\"CNPJ...\" />\r\n}\r\n\r\nexport default MaskedInput","function validarCNPJ(cnpj) {\r\n \r\n    cnpj = cnpj.replace(/[^\\d]+/g,'');\r\n \r\n    if(cnpj == '') return false;\r\n     \r\n    if (cnpj.length != 14)\r\n        return false;\r\n \r\n    // Elimina CNPJs invalidos conhecidos\r\n    if (cnpj == \"00000000000000\" || \r\n        cnpj == \"11111111111111\" || \r\n        cnpj == \"22222222222222\" || \r\n        cnpj == \"33333333333333\" || \r\n        cnpj == \"44444444444444\" || \r\n        cnpj == \"55555555555555\" || \r\n        cnpj == \"66666666666666\" || \r\n        cnpj == \"77777777777777\" || \r\n        cnpj == \"88888888888888\" || \r\n        cnpj == \"99999999999999\")\r\n        return false;\r\n         \r\n    // Valida DVs\r\n    let tamanho = cnpj.length - 2\r\n    let numeros = cnpj.substring(0,tamanho);\r\n    let digitos = cnpj.substring(tamanho);\r\n    let soma = 0;\r\n    let pos = tamanho - 7;\r\n    let i\r\n\r\n    for (i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n\r\n    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(0))\r\n        return false;\r\n         \r\n    tamanho = tamanho + 1;\r\n    numeros = cnpj.substring(0,tamanho);\r\n    soma = 0;\r\n    pos = tamanho - 7;\r\n    for (i = tamanho; i >= 1; i--) {\r\n      soma += numeros.charAt(tamanho - i) * pos--;\r\n      if (pos < 2)\r\n            pos = 9;\r\n    }\r\n    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\r\n    if (resultado != digitos.charAt(1))\r\n          return false;\r\n           \r\n    return true;\r\n    \r\n}\r\n\r\nexport default validarCNPJ","export default __webpack_public_path__ + \"static/media/search.5fa7fed3.png\";","import React, { useState, useEffect } from 'react'\r\nimport api from '../../services/api'\r\nimport MaskedInput from '../../services/MaskedInput'\r\nimport validarCNPJ from '../../services/validaCNPJ'\r\nimport './style.scss'\r\nimport searchImg from '../../assets/search.png'\r\n\r\n\r\nconst Dashboard = () => {\r\n    const [newCnpj, setNewCnpj] = useState('')\r\n    const [empresas, setEmpresas] = useState(() => {\r\n        const storagedEmpresas = localStorage.getItem('@LocalizadorEmpresas:dadosEmpresas')\r\n\r\n        if(storagedEmpresas){\r\n            return JSON.parse(storagedEmpresas)\r\n        }else{\r\n            return []\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('@LocalizadorEmpresas:dadosEmpresas', JSON.stringify(empresas))\r\n    }, [empresas])\r\n  \r\n    async function handleNewSearch(event){\r\n        event.preventDefault()\r\n\r\n        if(validarCNPJ(newCnpj)){\r\n            const response = await api.get(`/${newCnpj}`)    \r\n            const empresa = response.data    \r\n            setEmpresas([...empresas, empresa])\r\n        }else{\r\n            alert(\"O CNPJ informado não é valido\")           \r\n        }       \r\n    }     \r\n    \r\n    \r\n    function cheacaEmpresasConsultadas(){\r\n        if(empresas.length == 0){\r\n            return (          \r\n                <div className=\"search\">\r\n                    <img src={searchImg} placeholder=\"Search Image\" />\r\n                    <h1>Localize acima a primeira empresa</h1>\r\n                </div>\r\n         \r\n            )\r\n        }else {\r\n           return (\r\n                <>\r\n                    {empresas.map(emp => (                                            \r\n                            \r\n                            <a href=\"\">\r\n                                <div class=\"card\">                               \r\n                                    <div class=\"container\">\r\n                                        <h5>{emp.nome} <br/> <h6>Razão Social</h6></h5>\r\n                                        <p>{emp.cnpj}<br/>  <h6>CNPJ</h6></p>\r\n                                        <p>{emp.logradouro} {emp.numero} {emp.bairro} {emp.municipio} <br/> <h6>Endereço</h6></p>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                    \r\n                        \r\n                    ))}\r\n                </>\r\n           )\r\n        }\r\n    }\r\n       \r\n   \r\n    return (\r\n        <div className=\"dashboard\">\r\n        \r\n            <div className=\"buscador\">\r\n                <h1><i class=\"fas fa-building\"></i> Localizador de Empresas</h1>              \r\n\r\n                <form onSubmit={handleNewSearch}>\r\n                    <MaskedInput value={newCnpj} onChange={(event) => setNewCnpj(event.target.value)} />\r\n                    <button type=\"submit\">LOCALIZAR</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"empresasConsultadas\">\r\n                {cheacaEmpresasConsultadas()}\r\n            </div>\r\n            \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\n\r\nconst Empresa = () => {\r\n    return (\r\n        <h1>Empresa</h1>\r\n    )\r\n}\r\n\r\nexport default Empresa","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Dashboard from '../pages/Dashboard'\r\nimport Empresa from '../pages/Empresa'\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n           <Route path={'/desafio-dev'} exact component={Dashboard} />\r\n           <Route path={'/Empresa'} component={Empresa} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes","import React from 'react'\nimport Routes from './routes'\nimport {BrowserRouter} from 'react-router-dom'\n\nconst App = () => {\n\n  return (\n\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>   \n\n  )\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}